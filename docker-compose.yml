version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: student_db
    volumes:
      - mongodb_data:/data/db
    networks:
      - microservices-net
    healthcheck:
      test: mongosh --eval 'db.runCommand("ping").ok' localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: always

  student-service:
    build: 
      context: ./student-service
      dockerfile: Dockerfile
    container_name: student-service
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URL=mongodb://root:example@mongodb:27017/?authSource=admin
      - DATABASE_NAME=student_db
      - PORT=8000
      - PYTHONUNBUFFERED=1
      - HOST=0.0.0.0
    volumes:
      - ./student-service:/app
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - microservices-net
    restart: always
    healthcheck:
      test: curl --fail http://localhost:8000/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  course-service:
    build: 
      context: ./course-service
      dockerfile: Dockerfile
    container_name: course-service
    ports:
      - "8001:8000"
    environment:
      - MONGODB_URL=mongodb://root:example@mongodb:27017/?authSource=admin
      - DATABASE_NAME=course_db
      - PORT=8000
      - PYTHONUNBUFFERED=1
      - HOST=0.0.0.0
    volumes:
      - ./course-service:/app
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - microservices-net
    restart: always

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongodb:27017/?authSource=admin
      ME_CONFIG_BASICAUTH_USERNAME: dev
      ME_CONFIG_BASICAUTH_PASSWORD: dev
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - microservices-net
    restart: always

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_STUDENT_SERVICE_URL=http://localhost:8000
      - REACT_APP_COURSE_SERVICE_URL=http://localhost:8001
      - WDS_SOCKET_PORT=0
      - WATCHPACK_POLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - student-service
      - course-service
    networks:
      - microservices-net
    restart: always

networks:
  microservices-net:
    driver: bridge

volumes:
  mongodb_data: